branches:
  only:
    - master
    - develop

skip_tags: true

platform:
  - x64

configuration:
  - Release

environment:
  matrix:
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      CMAKE_GENERATOR: "Visual Studio 16 2019"
      ENABLE_CYACAS_GUI: On
      ENABLE_CYACAS_KERNEL: On
      QTDIR: C:\Qt\5.15.2\msvc2019_64
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2022
      CMAKE_GENERATOR: "Visual Studio 17 2022"
      ENABLE_CYACAS_GUI: Off
      ENABLE_CYACAS_KERNEL: On
      QTDIR: C:\Qt\5.15.2\msvc2022_64
    - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu2004
      CMAKE_GENERATOR: "Ninja"
      ENABLE_CYACAS_GUI: Off
      ENABLE_CYACAS_KERNEL: On
      QTDIR: $HOME/Qt/5.15.2/gcc_64/bin
    - APPVEYOR_BUILD_WORKER_IMAGE: macos-bigsur
      CMAKE_GENERATOR: "Xcode"
      ENABLE_CYACAS_GUI: Off
      ENABLE_CYACAS_KERNEL: Off
      QTDIR: $HOME/Qt/5.15.2/clang_64/bin

install:
  - cmd: if not exist C:\Tools\vcpkg\installed\x64-windows\bin (
            cd c:\tools\vcpkg &
            vcpkg install boost-filesystem:x64-windows &
            vcpkg install boost-date-time:x64-windows &
            vcpkg install boost-serialization:x64-windows &
            vcpkg install boost-uuid:x64-windows &
            vcpkg install boost-dll:x64-windows &
            vcpkg install openssl:x64-windows &
            vcpkg install zeromq:x64-windows &
            vcpkg install jsoncpp:x64-windows &
            vcpkg install cppzmq:x64-windows &
            vcpkg integrate install
         )
  - sh: if [ "$APPVEYOR_BUILD_WORKER_IMAGE" == "Ubuntu2004" ]; then
            sudo apt-get update -qq;
            sudo apt-get install -qq libboost-all-dev libssl-dev libjsoncpp-dev libzmq3-dev;
        fi
  - sh: if [ "$APPVEYOR_BUILD_WORKER_IMAGE" == "macos-bigsur" ]; then
            brew update;
            brew upgrade;
            brew install boost jsoncpp zeromq;
        fi
cache:
  - c:\tools\vcpkg\installed\ -> appveyor.yml

before_build:
  - cmd: cd %APPVEYOR_BUILD_FOLDER%
  - cmd: cmake -H. -Bbuild -G "%CMAKE_GENERATOR%" -DCMAKE_TOOLCHAIN_FILE=c:/tools/vcpkg/scripts/buildsystems/vcpkg.cmake -DENABLE_CYACAS_KERNEL=%ENABLE_CYACAS_KERNEL% -DENABLE_CYACAS_UNIT_TESTS=Off -DENABLE_CYACAS_BENCHMARKS=Off -DENABLE_CYACAS_GUI=%ENABLE_CYACAS_GUI% -DCMAKE_PREFIX_PATH="%QTDIR%" -DCMAKE_INSTALL_PREFIX=%APPVEYOR_BUILD_FOLDER%\install
  - sh: cd $APPVEYOR_BUILD_FOLDER
  - sh: cmake -H. -Bbuild -G $CMAKE_GENERATOR -DCMAKE_BUILD_TYPE=Release -DENABLE_CYACAS_KERNEL=$ENABLE_CYACAS_KERNEL -DENABLE_CYACAS_UNIT_TESTS=Off -DENABLE_CYACAS_BENCHMARKS=Off -DENABLE_CYACAS_GUI=$ENABLE_CYACAS_GUI -DCMAKE_PREFIX_PATH="$QTDIR" -DCMAKE_INSTALL_PREFIX=$APPVEYOR_BUILD_FOLDER/install

build_script:
  - cmd: cd %APPVEYOR_BUILD_FOLDER%\build
  - cmd: cmake --build . --config Release --target install
  - sh: cd $APPVEYOR_BUILD_FOLDER/build
  - sh: cmake --build . --config Release --target install

test_script:
  - cmd: cd %APPVEYOR_BUILD_FOLDER%\build
  - cmd: ctest -C Release
  - sh: cd $APPVEYOR_BUILD_FOLDER/build
  - sh: ctest -C Release

after_build:
  - cmd: cd ..\install
  - cmd: 7z a yacas.zip *
  - sh: cd ../install
  - sh: zip -r yacas.zip *

artifacts:
  - path: install/yacas.zip
    name: yacas
